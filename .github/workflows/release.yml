name: Release

on:
  push:
    tags:
      - '*'

env:
  SUBWASM_VERSION: 0.20.0

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - id: check_version
        run: |
          VERSION=$(grep -m1 version Cargo.toml | sed -E 's/.*"(.*)".*/\1/')
          TAG_NAME="${{ github.ref_name }}"
          
          if echo "$TAG_NAME" | grep -qE '^v[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "is_release_version=true" >> $GITHUB_OUTPUT
            if [ "v$VERSION" == "$TAG_NAME" ]; then
              echo "Proceeding with tag $TAG_NAME matching Cargo.toml version v$VERSION."
            else
              echo "Version in Cargo.toml ($VERSION) does not match current tag $TAG_NAME. Canceling release..."
              exit 1
            fi
          else
            echo "is_release_version=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG_NAME does not have the format 'v*.*.*'. Skipping version check and proceeding..."
          fi
    outputs:
      is_release_version: ${{ steps.check_version.outputs.is_release_version }}

  srtool_build:
    needs: check-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - { name: "laos", package: "laos-runtime", path: "runtime/laos" }
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: build_and_push
      - name: Srtool build
        id: srtool_build
        uses: chevdor/srtool-actions@v0.9.2
        with:
          chain: ${{ matrix.runtime.name }}
          package: ${{ matrix.runtime.package }}
          runtime_dir: ${{ matrix.runtime.path }}
          tag: 1.74.0
      - name: Upload Laos Wasm Artifact
        uses: actions/upload-artifact@v3
        with:
          name: laos-wasm
          path: |
            ${{ steps.srtool_build.outputs.wasm }}
            ${{ steps.srtool_build.outputs.wasm_compressed }}

  srtool_build_paseo:
    needs: check-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - { name: "laos", package: "laos-runtime", path: "runtime/laos" }
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: build_and_push
      - name: Srtool build for paseo
        id: srtool_build_paseo
        uses: chevdor/srtool-actions@v0.9.2
        env:
          BUILD_OPTS: "--features paseo"
        with:
          chain: ${{ matrix.runtime.name }}
          package: ${{ matrix.runtime.package }}
          runtime_dir: ${{ matrix.runtime.path }}
          tag: 1.74.0
      - name: Upload Paseo Wasm Artifact
        uses: actions/upload-artifact@v3
        with:
          name: paseo-wasm
          path: |
            ${{ steps.srtool_build_paseo.outputs.wasm }}
            ${{ steps.srtool_build_paseo.outputs.wasm_compressed }}

  prepare-release:
    needs: [srtool_build, srtool_build_paseo]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Laos Wasm Artifact
        uses: actions/download-artifact@v3
        with:
          name: laos-wasm
      - name: Download Paseo Wasm Artifact
        uses: actions/download-artifact@v3
        with:
          name: paseo-wasm
      - name: Install subwasm ${{ env.SUBWASM_VERSION }}
        run: |
          wget https://github.com/chevdor/subwasm/releases/download/v${{ env.SUBWASM_VERSION }}/subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          sudo dpkg -i subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          subwasm --version
      - name: Extract metadata
        run: |
          subwasm --json info laos-wasm/laos_runtime.wasm > laos-info.json
          subwasm --json info paseo-wasm/paseo_runtime.wasm > paseo-info.json
          
          # Extraer las versiones de rustc y srtool directamente desde laos-info.json y pasarlas al entorno
          echo "RUSTC_VERSION=$(jq -r '.info.rustc' < laos-info.json)" >> $GITHUB_ENV
          echo "SRTOOL_VERSION=$(jq -r '.info.generator.version' < laos-info.json)" >> $GITHUB_ENV
          
      - name: Update Release Description with subwasm info
        run: |
          gh release view ${{ github.ref_name }} --json body -q .body > description.txt
          
          # Utilizar las variables de entorno ya establecidas
          printf "\n\n## Laos Runtime for Polkadot\nThis runtime was built using $RUSTC_VERSION with srtool $SRTOOL_VERSION\n" >> description.txt
          echo '```' >> description.txt
          cat laos-info.json >> description.txt
          echo '```' >> description.txt

          printf "\n\n## Paseo Runtime\nThis runtime was built using $RUSTC_VERSION with srtool $SRTOOL_VERSION\n" >> description.txt
          echo '```' >> description.txt
          cat paseo-info.json >> description.txt
          echo '```' >> description.txt
          
          gh release edit ${{ github.ref_name }} --notes-file description.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUSTC_VERSION: ${{ env.RUSTC_VERSION }}
          SRTOOL_VERSION: ${{ env.SRTOOL_VERSION }}
      - name: Upload Files to Release
        run: |
          gh release upload ${{ github.ref_name }} laos-wasm/laos_runtime.wasm --name "laos_runtime.wasm"
          gh release upload ${{ github.ref_name }} paseo-wasm/paseo_runtime.wasm --name "paseo_runtime.wasm"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  dockerize_and_push:
    needs: prepare-release
    runs-on: 
      group: laos
      labels: ubuntu-16-cores
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: build_and_push
      - name: Build
        run: |
          cargo build --release --locked
      - name: Log in to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push image of laos node
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ./docker/laos-node.local.Dockerfile
          tags: freeverseio/laos-node:${{ github.ref_name }}
